{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridEvents } from '../../models/events/gridEvents';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ErrorOverlayWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  width: '100%',\n  height: '100%'\n});\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => /*#__PURE__*/_jsx(GridMainContainer, {\n      children: /*#__PURE__*/_jsx(GridAutoSizer, {\n        nonce: rootProps.nonce,\n        disableHeight: rootProps.autoHeight,\n        onResize: handleResize,\n        children: () => {\n          var _rootProps$components;\n\n          return /*#__PURE__*/_jsx(ErrorOverlayWrapper, {\n            children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n          });\n        }\n      })\n    }),\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js"],"names":["_extends","React","PropTypes","styled","useGridApiContext","useGridLogger","GridMainContainer","ErrorBoundary","useGridRootProps","GridAutoSizer","GridEvents","jsx","_jsx","ErrorOverlayWrapper","position","top","width","height","GridErrorHandler","props","children","apiRef","logger","rootProps","error","current","state","handleResize","useCallback","size","publishEvent","resize","hasError","componentProps","api","render","errorProps","nonce","disableHeight","autoHeight","onResize","_rootProps$components","components","ErrorOverlay","componentsProps","errorOverlay","process","env","NODE_ENV","propTypes","node"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,mBAAmB,GAAGV,MAAM,CAAC,KAAD,CAAN,CAAc;AACxCW,EAAAA,QAAQ,EAAE,UAD8B;AAExCC,EAAAA,GAAG,EAAE,CAFmC;AAGxCC,EAAAA,KAAK,EAAE,MAHiC;AAIxCC,EAAAA,MAAM,EAAE;AAJgC,CAAd,CAA5B;;AAOA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,MAAM,GAAGjB,iBAAiB,EAAhC;AACA,QAAMkB,MAAM,GAAGjB,aAAa,CAACgB,MAAD,EAAS,kBAAT,CAA5B;AACA,QAAME,SAAS,GAAGf,gBAAgB,EAAlC;AACA,QAAMgB,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqBF,KAAnC;AACA,QAAMG,YAAY,GAAG1B,KAAK,CAAC2B,WAAN,CAAkBC,IAAI,IAAI;AAC7CR,IAAAA,MAAM,CAACI,OAAP,CAAeK,YAAf,CAA4BpB,UAAU,CAACqB,MAAvC,EAA+CF,IAA/C;AACD,GAFoB,EAElB,CAACR,MAAD,CAFkB,CAArB;AAGA,SAAO,aAAaT,IAAI,CAACL,aAAD,EAAgB;AACtCyB,IAAAA,QAAQ,EAAER,KAAK,IAAI,IADmB;AAEtCS,IAAAA,cAAc,EAAET,KAFsB;AAGtCU,IAAAA,GAAG,EAAEb,MAHiC;AAItCC,IAAAA,MAAM,EAAEA,MAJ8B;AAKtCa,IAAAA,MAAM,EAAEC,UAAU,IAAI,aAAaxB,IAAI,CAACN,iBAAD,EAAoB;AACzDc,MAAAA,QAAQ,EAAE,aAAaR,IAAI,CAACH,aAAD,EAAgB;AACzC4B,QAAAA,KAAK,EAAEd,SAAS,CAACc,KADwB;AAEzCC,QAAAA,aAAa,EAAEf,SAAS,CAACgB,UAFgB;AAGzCC,QAAAA,QAAQ,EAAEb,YAH+B;AAIzCP,QAAAA,QAAQ,EAAE,MAAM;AACd,cAAIqB,qBAAJ;;AAEA,iBAAO,aAAa7B,IAAI,CAACC,mBAAD,EAAsB;AAC5CO,YAAAA,QAAQ,EAAE,aAAaR,IAAI,CAACW,SAAS,CAACmB,UAAV,CAAqBC,YAAtB,EAAoC3C,QAAQ,CAAC,EAAD,EAAKoC,UAAL,EAAiB,CAACK,qBAAqB,GAAGlB,SAAS,CAACqB,eAAnC,KAAuD,IAAvD,GAA8D,KAAK,CAAnE,GAAuEH,qBAAqB,CAACI,YAA9G,CAA5C;AADiB,WAAtB,CAAxB;AAGD;AAVwC,OAAhB;AAD8B,KAApB,CALD;AAmBtCzB,IAAAA,QAAQ,EAAEA;AAnB4B,GAAhB,CAAxB;AAqBD;;AAED0B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC9B,gBAAgB,CAAC+B,SAAjB,GAA6B;AACnE;AACA;AACA;AACA;AACA7B,EAAAA,QAAQ,EAAElB,SAAS,CAACgD;AAL+C,CAArE,GAMI,KAAK,CANT;AAOA,SAAShC,gBAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridEvents } from '../../models/events/gridEvents';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ErrorOverlayWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  width: '100%',\n  height: '100%'\n});\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => /*#__PURE__*/_jsx(GridMainContainer, {\n      children: /*#__PURE__*/_jsx(GridAutoSizer, {\n        nonce: rootProps.nonce,\n        disableHeight: rootProps.autoHeight,\n        onResize: handleResize,\n        children: () => {\n          var _rootProps$components;\n\n          return /*#__PURE__*/_jsx(ErrorOverlayWrapper, {\n            children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n          });\n        }\n      })\n    }),\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };"]},"metadata":{},"sourceType":"module"}