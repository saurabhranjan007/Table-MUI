{"ast":null,"code":"import _slicedToArray from \"C:/pproject-files/new-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  var children = props.children,\n      VirtualScrollerComponent = props.VirtualScrollerComponent,\n      ColumnHeadersComponent = props.ColumnHeadersComponent;\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n\n  var _React$useState = React.useState(rootProps.disableVirtualization),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isVirtualizationDisabled = _React$useState2[0],\n      setIsVirtualizationDisabled = _React$useState2[1];\n\n  var disableVirtualization = React.useCallback(function () {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  var enableVirtualization = React.useCallback(function () {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  var columnHeadersRef = React.useRef(null);\n  var columnsContainerRef = React.useRef(null);\n  var windowRef = React.useRef(null);\n  var renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  var handleResize = React.useCallback(function (size) {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: function children(size) {\n        var style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/components/base/GridBody.js"],"names":["React","PropTypes","GridEvents","useGridApiContext","GridMainContainer","GridAutoSizer","GridOverlays","useGridRootProps","useGridSelector","gridDensityHeaderHeightSelector","jsx","_jsx","jsxs","_jsxs","GridBody","props","children","VirtualScrollerComponent","ColumnHeadersComponent","apiRef","rootProps","headerHeight","useState","disableVirtualization","isVirtualizationDisabled","setIsVirtualizationDisabled","useCallback","enableVirtualization","current","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","useRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","handleResize","size","publishEvent","resize","ref","innerRef","nonce","disableHeight","autoHeight","onResize","style","width","height","marginTop","process","env","NODE_ENV","propTypes","node","elementType","isRequired"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };"]},"metadata":{},"sourceType":"module"}