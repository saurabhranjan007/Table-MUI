{"ast":null,"code":"import _slicedToArray from \"C:/pproject-files/new-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  var apiMethodsRef = React.useRef(apiMethods);\n\n  var _React$useState = React.useState(Object.keys(apiMethods)),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      apiMethodsNames = _React$useState2[0];\n\n  var installMethods = React.useCallback(function () {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(function (methodName) {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = function () {\n          var _apiMethodsRef$curren;\n\n          return (_apiMethodsRef$curren = apiMethodsRef.current)[methodName].apply(_apiMethodsRef$curren, arguments);\n        };\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(function () {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(function () {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js"],"names":["React","useGridApiMethod","apiRef","apiMethods","apiName","apiMethodsRef","useRef","useState","Object","keys","apiMethodsNames","installMethods","useCallback","current","forEach","methodName","hasOwnProperty","useEffect"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,UAAlC,EAA8C;AACrD;AACAC,OAFO,EAEE;AACP,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAaH,UAAb,CAAtB;;AACA,wBAA0BH,KAAK,CAACO,QAAN,CAAeC,MAAM,CAACC,IAAP,CAAYN,UAAZ,CAAf,CAA1B;AAAA;AAAA,MAAOO,eAAP;;AACA,MAAMC,cAAc,GAAGX,KAAK,CAACY,WAAN,CAAkB,YAAM;AAC7C,QAAI,CAACV,MAAM,CAACW,OAAZ,EAAqB;AACnB;AACD;;AAEDH,IAAAA,eAAe,CAACI,OAAhB,CAAwB,UAAAC,UAAU,EAAI;AACpC,UAAI,CAACb,MAAM,CAACW,OAAP,CAAeG,cAAf,CAA8BD,UAA9B,CAAL,EAAgD;AAC9Cb,QAAAA,MAAM,CAACW,OAAP,CAAeE,UAAf,IAA6B;AAAA;;AAAA,iBAAa,yBAAAV,aAAa,CAACQ,OAAd,EAAsBE,UAAtB,yCAAb;AAAA,SAA7B;AACD;AACF,KAJD;AAKD,GAVsB,EAUpB,CAACL,eAAD,EAAkBR,MAAlB,CAVoB,CAAvB;AAWAF,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AACpBZ,IAAAA,aAAa,CAACQ,OAAd,GAAwBV,UAAxB;AACD,GAFD,EAEG,CAACA,UAAD,CAFH;AAGAH,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AACpBN,IAAAA,cAAc;AACf,GAFD,EAEG,CAACA,cAAD,CAFH;AAGAA,EAAAA,cAAc;AACf","sourcesContent":["import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}"]},"metadata":{},"sourceType":"module"}