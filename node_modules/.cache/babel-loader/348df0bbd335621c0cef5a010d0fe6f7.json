{"ast":null,"code":"var _jsxFileName = \"C:\\\\pproject-files\\\\new-app\\\\src\\\\new-components\\\\TableMUI.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\nimport { GridColDef, GridApi, GridCellValue } from '@mui/x-data-grid';\nimport DataModal from \"./DataModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableMUI() {\n  _s();\n\n  const [selectedData, setSelectedData] = useState({}); // defining the column section of the table \n\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 50,\n    textAlign: 'centre'\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 200\n  }, {\n    field: \"username\",\n    headerName: \"User Name\",\n    width: 200\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 300\n  }, {\n    field: \"phone\",\n    headerName: \"Phone\",\n    width: 250\n  }, {\n    field: \"website\",\n    headerName: \"Website\",\n    width: 200\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    sortable: false,\n    renderCell: params => {\n      const onClick = x => {\n        console.log(\"x\", x);\n        x.stopPropagation(); // don't select this row after clicking\n\n        const api = params.api;\n        const thisRow = {};\n        api.getAllColumns().filter(c => c.field !== '__check__' && !!c).forEach(c => thisRow[c.field] = params.getValue(params.id, c.field));\n        setSelectedData(thisRow);\n      }; // return <Button variant=\"outlined\" color=\"secondary\" onClick={(event) => handleClick(event.target.value)} >Details</Button>;\n      // return <Button variant=\"outlined\" color=\"secondary\" onClick={onClick} >Details</Button>;\n\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(DataModal, {\n          selectedData: selectedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this);\n    }\n  }]; // fetching data from the API and setting it to tableData to be shown in the row section of the table\n\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => setTableData(data)).catch(error => console.log(\"Error =>\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 650,\n      width: '90%',\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns // pageSize={10}\n      ,\n      initialState: {\n        sorting: {\n          sortModel: [{\n            field: '',\n            sort: 'asc'\n          }]\n        },\n        filter: {\n          filterModel: {\n            items: [{\n              columnField: '',\n              operatorValue: '>',\n              value: ''\n            }]\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableMUI, \"TXzSQNGCH1HSHo/894Sr5ozQHt0=\");\n\n_c = TableMUI;\nexport default TableMUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableMUI\");","map":{"version":3,"sources":["C:/pproject-files/new-app/src/new-components/TableMUI.jsx"],"names":["React","useState","useEffect","DataGrid","Button","GridColDef","GridApi","GridCellValue","DataModal","TableMUI","selectedData","setSelectedData","columns","field","headerName","width","textAlign","sortable","renderCell","params","onClick","x","console","log","stopPropagation","api","thisRow","getAllColumns","filter","c","forEach","getValue","id","tableData","setTableData","fetch","then","response","json","data","catch","error","height","sorting","sortModel","sort","filterModel","items","columnField","operatorValue","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\nimport { GridColDef, GridApi, GridCellValue } from '@mui/x-data-grid';\r\nimport DataModal from \"./DataModal\"\r\n\r\nfunction TableMUI() {\r\n\r\n    const [selectedData, setSelectedData] = useState({})\r\n\r\n    // defining the column section of the table \r\n    const columns = [\r\n        {field: \"id\", headerName: \"ID\", width: 50, textAlign: 'centre'},\r\n        {field: \"name\", headerName: \"Name\", width: 200},\r\n        {field: \"username\", headerName: \"User Name\", width: 200},\r\n        {field: \"email\", headerName: \"Email\", width: 300},\r\n        {field: \"phone\", headerName: \"Phone\", width: 250},\r\n        {field: \"website\", headerName: \"Website\", width: 200},\r\n    \r\n        {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        sortable: false,\r\n        renderCell: (params) => {\r\n          const onClick = (x) => {\r\n              console.log(\"x\",x)\r\n            x.stopPropagation(); // don't select this row after clicking\r\n    \r\n            const api = params.api;\r\n            const thisRow = {};\r\n    \r\n            api\r\n              .getAllColumns()\r\n              .filter((c) => c.field !== '__check__' && !!c)\r\n              .forEach((c) => (thisRow[c.field] = params.getValue(params.id, c.field)));\r\n                setSelectedData(thisRow)\r\n              };\r\n              \r\n                // return <Button variant=\"outlined\" color=\"secondary\" onClick={(event) => handleClick(event.target.value)} >Details</Button>;\r\n                // return <Button variant=\"outlined\" color=\"secondary\" onClick={onClick} >Details</Button>;\r\n\r\n                return <div onClick={onClick}>\r\n                    <DataModal selectedData={selectedData}/>\r\n                </div>\r\n                },\r\n            },        \r\n    ]\r\n\r\n    // fetching data from the API and setting it to tableData to be shown in the row section of the table\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(data => setTableData(data))\r\n        .catch(error => console.log(\"Error =>\", error)); \r\n    }, [])\r\n\r\n    return(\r\n\r\n        <div style={{height: 650, width: '90%', textAlign: \"center\"}}>\r\n\r\n            <DataGrid \r\n                rows={tableData}\r\n                columns={columns}\r\n                // pageSize={10}\r\n                initialState={{\r\n                    sorting: {\r\n                        sortModel: [{ field: '', sort: 'asc' }],\r\n                    },\r\n                    filter: {\r\n                        filterModel: {\r\n                            items: [{ columnField: '', operatorValue: '>', value: '' }],\r\n                        },\r\n                    },\r\n                }}\r\n\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableMUI;\r\n"]},"metadata":{},"sourceType":"module"}