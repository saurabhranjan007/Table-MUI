{"ast":null,"code":"export var amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n              to = _ref.to,\n              count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" \\u12A8 \").concat(count !== -1 ? count : \"\".concat(to, \" \\u1260\\u120B\\u12ED\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u12AE\\u12A8\").concat(value !== 1 ? 'ቦች' : 'ብ');\n        },\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ወደ ', \"\\u1308\\u133D \").concat(page).concat(selected ? '' : ' ሂድ');\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport var arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش للصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: function labelDisplayedRows(_ref2) {\n          var from = _ref2.from,\n              to = _ref2.to,\n              count = _ref2.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة');\n        },\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'امش إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش  للصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport var arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: function labelDisplayedRows(_ref3) {\n          var from = _ref3.from,\n              to = _ref3.to,\n              count = _ref3.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة');\n        },\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'إذهب إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport var azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Ulduz';\n          var lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \" \").concat(selected ? 'səhifə' : 'səhifəyə keç');\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport var bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n              to = _ref4.to,\n              count = _ref4.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \" \\u09A5\\u09C7\\u0995\\u09C7 \\u09AC\\u09C7\\u09B6\\u09BF\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u09B8\\u09CD\\u099F\\u09BE\\u09B0\");\n        },\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'যান ', \"\\u09AA\\u09C3\\u09B7\\u09CD\\u09A0\\u09BE \").concat(page, \"-\\u098F\");\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport var bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0417\\u0432\\u0435\\u0437\\u0434\").concat(value !== 1 ? 'и' : 'а');\n        },\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Към ', \"\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport var caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Estrelles' : 'Estrella');\n        },\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport var csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: function labelDisplayedRows(_ref5) {\n          var from = _ref5.from,\n              to = _ref5.to,\n              count = _ref5.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"v\\xEDce ne\\u017E \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          if (value === 1) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dka\");\n          }\n\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dky\");\n          }\n\n          return \"\".concat(value, \" hv\\u011Bzdi\\u010Dek\");\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Jít na ').concat(page, \" str\\xE1nku\");\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport var daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: function labelDisplayedRows(_ref6) {\n          var from = _ref6.from,\n              to = _ref6.to,\n              count = _ref6.count;\n          return \"\".concat(from, \"-\").concat(to, \" af \").concat(count !== -1 ? count : \"mere end \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stjern\").concat(value !== 1 ? 'er' : '');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport var deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: function labelDisplayedRows(_ref7) {\n          var from = _ref7.from,\n              to = _ref7.to,\n              count = _ref7.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" von \").concat(count !== -1 ? count : \"mehr als \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Sterne' : 'Stern');\n        },\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gehe zu ', \"Seite \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport var elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: function labelDisplayedRows(_ref8) {\n          var from = _ref8.from,\n              to = _ref8.to,\n              count = _ref8.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u03B1\\u03C0\\u03CC \").concat(count !== -1 ? count : \"\\u03C0\\u03AC\\u03BD\\u03C9 \\u03B1\\u03C0\\u03CC \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0391\\u03C3\\u03C4\\u03AD\\u03C1\\u03B9\").concat(value !== 1 ? 'α' : '');\n        },\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Μετάβαση ', \"\\u03C3\\u03B5\\u03BB\\u03AF\\u03B4\\u03B1 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport var enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport var esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref9) {\n          var from = _ref9.from,\n              to = _ref9.to,\n              count = _ref9.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"m\\xE1s de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrella\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir a la ', \"p\\xE1gina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport var etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" T\\xE4rn\").concat(value !== 1 ? 'i' : '');\n        },\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vali ', \"lehek\\xFClg \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport var faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0633\\u062A\\u0627\\u0631\\u0647\");\n        },\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'رفتن به ', \"\\u0635\\u0641\\u062D\\u0647\\u0654 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport var fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: function labelDisplayedRows(_ref10) {\n          var from = _ref10.from,\n              to = _ref10.to,\n              count = _ref10.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"enemm\\xE4n kuin \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" T\\xE4ht\").concat(value !== 1 ? 'eä' : 'i');\n        },\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? 'sivu' : 'Mene sivulle', \" \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport var frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: function labelDisplayedRows(_ref11) {\n          var from = _ref11.from,\n              to = _ref11.to,\n              count = _ref11.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" sur \").concat(count !== -1 ? count : \"plus que \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Etoile\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Aller à la ', \"page \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport var heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: function labelDisplayedRows(_ref12) {\n          var from = _ref12.from,\n              to = _ref12.to,\n              count = _ref12.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u05DE\\u05EA\\u05D5\\u05DA \").concat(count !== -1 ? count : \"\\u05D9\\u05D5\\u05EA\\u05E8 \\u05DE \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u05DB\\u05D5\\u05DB\\u05D1\").concat(value !== 1 ? 'ים' : '');\n        },\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ל ', \"\\u05E2\\u05DE\\u05D5\\u05D3 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport var hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref13) {\n          var from = _ref13.from,\n              to = _ref13.to,\n              count = _ref13.count;\n          return \"\".concat(from, \"-\").concat(to === -1 ? count : to, \" \\u0915\\u0941\\u0932 \").concat(count, \" \\u092E\\u0947\\u0902\");\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0924\\u093E\\u0930\").concat(value !== 1 ? 'े' : 'ा');\n        },\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u092A\\u0943\\u0937\\u094D\\u0920 \".concat(page, \" \").concat(selected ? '' : ' पर जाएँ');\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n}; // Croatian - Hrvatski\n\nexport var hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: function labelDisplayedRows(_ref14) {\n          var from = _ref14.from,\n              to = _ref14.to,\n              count = _ref14.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" od \").concat(count !== -1 ? count : \"vi\\u0161e nego \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var lastDigit = value % 10;\n          var lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Idi na ', \"stranicu \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport var huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Csillag\");\n        },\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \". oldal\").concat(selected ? '' : 'ra');\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport var hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0531\\u057D\\u057F\\u0572\");\n        },\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport var idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Bintang\");\n        } // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport var isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value === 1 ? 'Stjarna' : 'Stjörnur');\n        },\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport var itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: function labelDisplayedRows(_ref15) {\n          var from = _ref15.from,\n              to = _ref15.to,\n              count = _ref15.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" di \").concat(count !== -1 ? count : \"pi\\xF9 di \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stell\").concat(value !== 1 ? 'e' : 'a');\n        },\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vai alla ', \"pagina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport var jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: function labelDisplayedRows(_ref16) {\n          var from = _ref16.from,\n              to = _ref16.to,\n              count = _ref16.count;\n          return \"\".concat(from, \"\\uFF5E\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\u4EE5\\u4E0A\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\\u661F\".concat(value);\n        },\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u30DA\\u30FC\\u30B8\".concat(page).concat(selected ? '' : 'へ');\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport var khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref17) {\n          var from = _ref17.from,\n              to = _ref17.to,\n              count = _ref17.count;\n          return \"\".concat(from, \" - \").concat(to, \" \\u1793\\u17C3 \").concat(count !== -1 ? count : \"\\u1785\\u17D2\\u179A\\u17BE\\u1793\\u1787\\u17B6\\u1784 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u1795\\u17D2\\u1780\\u17B6\\u1799\").concat(value !== 1 ? '' : '');\n        },\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ទៅ ', \"\\u1791\\u17C6\\u1796\\u17D0\\u179A \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport var koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: function labelDisplayedRows(_ref18) {\n          var from = _ref18.from,\n              to = _ref18.to,\n              count = _ref18.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\uAC1C \\uC774\\uC0C1\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\uC810\");\n        },\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \" \\uBC88\\uC9F8 \\uD398\\uC774\\uC9C0\").concat(selected ? '' : '로 이동');\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport var kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: function labelDisplayedRows(_ref19) {\n          var from = _ref19.from,\n              to = _ref19.to,\n              count = _ref19.count;\n          return \"\".concat(count !== -1 ? count : \"+\".concat(to), \" \\u049B\\u0430\\u0442\\u0430\\u0440\\u0434\\u044B\\u04A3 \\u0456\\u0448\\u0456\\u043D\\u0435\\u043D \").concat(from, \"\\u2013\").concat(to);\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0436\\u04B1\\u043B\\u0434\\u044B\\u0437\");\n        },\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\");\n            }\n\n            return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\\u043A\\u0435 \\u04E9\\u0442\\u0443\");\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n}; // Macedonian - Македонски\n\nexport var mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: function labelDisplayedRows(_ref20) {\n          var from = _ref20.from,\n              to = _ref20.to,\n              count = _ref20.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u043E\\u0434 \").concat(count !== -1 ? count : \"\\u043F\\u043E\\u0432\\u0435\\u045C\\u0435 \\u043E\\u0434 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var lastDigit = value % 10;\n          return \"\".concat(value, \" \\u0405\\u0432\\u0435\\u0437\\u0434\").concat(lastDigit === 1 ? 'а' : 'и');\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Оди на ', \"\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport var nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: function labelDisplayedRows(_ref21) {\n          var from = _ref21.from,\n              to = _ref21.to,\n              count = _ref21.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"mer enn \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stjerne\").concat(value !== 1 ? 'r' : '');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå til ', \"side \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport var nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: function labelDisplayedRows(_ref22) {\n          var from = _ref22.from,\n              to = _ref22.to,\n              count = _ref22.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" van \").concat(count !== -1 ? count : \"meer dan \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Ster\").concat(value !== 1 ? 'ren' : '');\n        },\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ga naar ', \"pagina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport var plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: function labelDisplayedRows(_ref23) {\n          var from = _ref23.from,\n              to = _ref23.to,\n              count = _ref23.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"ponad \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'gwiazdek';\n          var lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return selected ? \"\".concat(page, \". strona\") : \"Przejd\\u017A do \".concat(page, \". strony\");\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport var ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref24) {\n          var from = _ref24.from,\n              to = _ref24.to,\n              count = _ref24.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport var ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref25) {\n          var from = _ref25.from,\n              to = _ref25.to,\n              count = _ref25.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport var roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" St\").concat(value !== 1 ? 'ele' : 'ea');\n        },\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Mergi la ', \"pagina \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n}; // Serbian - Srpski\n\nexport var srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: function labelDisplayedRows(_ref26) {\n          var from = _ref26.from,\n              to = _ref26.to,\n              count = _ref26.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" od \").concat(count !== -1 ? count : \"vi\\u0161e nego \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var lastDigit = value % 10;\n          var lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Idi na ', \"stranicu \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport var ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: function labelDisplayedRows(_ref27) {\n          var from = _ref27.from,\n              to = _ref27.to,\n              count = _ref27.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0438\\u0437 \").concat(count !== -1 ? count : \"\\u0431\\u043E\\u043B\\u0435\\u0435 \\u0447\\u0435\\u043C \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Звёзд';\n          var lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\");\n            }\n\n            return \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\");\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport var siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: function labelDisplayedRows(_ref28) {\n          var from = _ref28.from,\n              to = _ref28.to,\n              count = _ref28.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0DAF\\u0D9A\\u0DCA\\u0DC0\\u0DCF \").concat(count !== -1 ? count : \"\".concat(to, \" \\u0DA7 \\u0DC0\\u0DD0\\u0DA9\\u0DD2 \\u0DB4\\u0DCA\\u200D\\u0DBB\\u0DB8\\u0DCF\\u0DAB\\u0DBA\\u0D9A\\u0DD2\\u0DB1\\u0DCA\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\\u0DAD\\u0DBB\\u0DD4 \".concat(value);\n        },\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u0DB4\\u0DD2\\u0DA7\\u0DD4\\u0DC0 \".concat(page, \" \").concat(selected ? '' : 'ට යන්න');\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport var skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: function labelDisplayedRows(_ref29) {\n          var from = _ref29.from,\n              to = _ref29.to,\n              count = _ref29.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"viac ako \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          if (value === 1) {\n            return \"\".concat(value, \" hviezdi\\u010Dka\");\n          }\n\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hviezdi\\u010Dky\");\n          }\n\n          return \"\".concat(value, \" hviezdi\\u010Diek\");\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ísť na ', \"str\\xE1nku \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport var svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: function labelDisplayedRows(_ref30) {\n          var from = _ref30.from,\n              to = _ref30.to,\n              count = _ref30.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"fler \\xE4n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Stjärnor' : 'Stjärna');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå till ', \"sida \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport var thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: function labelDisplayedRows(_ref31) {\n          var from = _ref31.from,\n              to = _ref31.to,\n              count = _ref31.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0E08\\u0E32\\u0E01 \").concat(count !== -1 ? count : \"\\u0E21\\u0E32\\u0E01\\u0E01\\u0E27\\u0E48\\u0E32 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0E14\\u0E32\\u0E27\");\n        },\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ไปที่', \"\\u0E2B\\u0E19\\u0E49\\u0E32 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport var trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Y\\u0131ld\\u0131z\");\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \". \").concat(selected ? 'sayfa' : 'sayfaya git');\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport var ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: function labelDisplayedRows(_ref32) {\n          var from = _ref32.from,\n              to = _ref32.to,\n              count = _ref32.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0437 \").concat(count !== -1 ? count : \"\\u043F\\u043E\\u043D\\u0430\\u0434 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Зірок';\n          var lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Перейти на ', \"\\u0441\\u0442\\u043E\\u0440\\u0456\\u043D\\u043A\\u0443 \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport var viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: function labelDisplayedRows(_ref33) {\n          var from = _ref33.from,\n              to = _ref33.to,\n              count = _ref33.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" trong \").concat(count !== -1 ? count : \"nhi\\u1EC1u h\\u01A1n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" sao\");\n        },\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Tới ', \"trang \").concat(page);\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport var zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: function labelDisplayedRows(_ref34) {\n          var from = _ref34.from,\n              to = _ref34.to,\n              count = _ref34.count;\n          return \"\\u7B2C \".concat(from, \" \\u6761\\u5230\\u7B2C \").concat(to, \" \\u6761\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u6761\") : \"\\u81F3\\u5C11 \".concat(to, \" \\u6761\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u9897\\u661F\");\n        },\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport var zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: function labelDisplayedRows(_ref35) {\n          var from = _ref35.from,\n              to = _ref35.to,\n              count = _ref35.count;\n          return \"\\u7B2C \".concat(from, \" \\u9805\\u81F3\\u7B2C \").concat(to, \" \\u9805\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u9805\") : \"\\u8D85\\u904E \".concat(to, \" \\u9805\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u7C92\\u661F\");\n        },\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport var zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: function labelDisplayedRows(_ref36) {\n          var from = _ref36.from,\n              to = _ref36.to,\n              count = _ref36.count;\n          return \"\\u7B2C \".concat(from, \" \\u689D\\u5230\\u7B2C \").concat(to, \" \\u689D\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u689D\") : \"\\u81F3\\u5C11 \".concat(to, \" \\u689D\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u9846\\u661F\");\n        },\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/material/locale/index.js"],"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","arSD","azAZ","pluralForm","lastDigit","bnBD","bgBG","caES","csCZ","daDK","deDE","elGR","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","hrHR","lastTwoDigits","includes","huHU","hyAM","idID","isIS","itIT","jaJP","khKH","koKR","kzKZ","mkMK","nbNO","nlNL","plPL","ptBR","ptPT","roRO","srRS","ruRU","siLK","skSK","svSE","thTH","trTR","ukUA","viVN","zhCN","zhHK","zhTW"],"mappings":"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","sourcesContent":["export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش للصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'امش إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش  للصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'إذهب إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page} stránku`;\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n}; // Croatian - Hrvatski\n\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n\n            return `${page} — бетке өту`;\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n}; // Macedonian - Македонски\n\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          } // if (type === 'previous') {\n\n\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n}; // Serbian - Srpski\n\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          } // if (type === 'previous') {\n\n\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n\n            return `Перейти на ${page} страницу`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}