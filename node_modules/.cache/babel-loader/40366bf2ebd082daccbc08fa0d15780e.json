{"ast":null,"code":"var _jsxFileName = \"C:\\\\pproject-files\\\\new-app\\\\src\\\\new-components\\\\TableMUI.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid'; // import data from \"../data.json\";\n\nimport Details from \"./Details\"; // import { buttonBaseClasses } from \"@mui/material\";\n// import { textAlign } from \"@mui/system\";\n// import DetailButton from \"./DetailButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\"\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 200\n}, {\n  field: \"username\",\n  headerName: \"User Name\",\n  width: 200\n}, {\n  field: \"email\",\n  headerName: \"Email\",\n  width: 300\n}, {\n  field: \"phone\",\n  headerName: \"Phone\",\n  width: 250\n}, {\n  field: \"website\",\n  headerName: \"Website\",\n  width: 200\n}, {\n  field: \"action\",\n  headerName: \"Action\",\n  width: 150\n}, {\n  field: \"action\",\n  headerName: \"Action\",\n  sortable: false,\n  renderCell: params => {\n    const onClick = e => {\n      e.stopPropagation(); // don't select this row after clicking\n\n      const api = params.api;\n      const thisRow = {};\n      api.getAllColumns().filter(c => c.field !== \"__check__\" && !!c).forEach(c => thisRow[c.field] = params.getValue(params.id, c.field));\n      return alert(JSON.stringify(thisRow, null, 4));\n    };\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClick,\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this);\n  }\n}]; // let newReq = new Request(\"../data.json\")\n\nfunction TableMUI() {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\") // fetch(\"newReq\")\n    .then(response => response.json()).then(data => {\n      data.map(ele => {\n        return ele.action = \"Details\";\n      });\n      setTableData(data);\n    }).catch(error => console.log(\"Error =>\", error));\n  }, []); // console.log(\"tableData: \", tableData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 650,\n      width: '90%',\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns // pageSize={10}\n      ,\n      initialState: {\n        sorting: {\n          sortModel: [{\n            field: '',\n            sort: 'asc'\n          }]\n        },\n        filter: {\n          filterModel: {\n            items: [{\n              columnField: '',\n              operatorValue: '>',\n              value: ''\n            }]\n          }\n        }\n      } // checkboxSelection\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableMUI, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n\n_c = TableMUI;\nexport default TableMUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableMUI\");","map":{"version":3,"sources":["C:/pproject-files/new-app/src/new-components/TableMUI.jsx"],"names":["React","useState","useEffect","DataGrid","Details","columns","field","headerName","width","sortable","renderCell","params","onClick","e","stopPropagation","api","thisRow","getAllColumns","filter","c","forEach","getValue","id","alert","JSON","stringify","TableMUI","tableData","setTableData","fetch","then","response","json","data","map","ele","action","catch","error","console","log","height","textAlign","sorting","sortModel","sort","filterModel","items","columnField","operatorValue","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n// import data from \"../data.json\";\r\nimport Details from \"./Details\";\r\n// import { buttonBaseClasses } from \"@mui/material\";\r\n// import { textAlign } from \"@mui/system\";\r\n// import DetailButton from \"./DetailButton\";\r\n\r\nconst columns = [\r\n    {field: \"id\", headerName: \"ID\"},\r\n    {field: \"name\", headerName: \"Name\", width: 200},\r\n    {field: \"username\", headerName: \"User Name\", width: 200},\r\n    {field: \"email\", headerName: \"Email\", width: 300},\r\n    {field: \"phone\", headerName: \"Phone\", width: 250},\r\n    {field: \"website\", headerName: \"Website\", width: 200},\r\n    {field: \"action\", headerName: \"Action\",  width: 150},\r\n    {\r\n        field: \"action\",\r\n        headerName: \"Action\",\r\n        sortable: false,\r\n        renderCell: (params) => {\r\n          const onClick = (e) => {\r\n            e.stopPropagation(); // don't select this row after clicking\r\n    \r\n            const api: GridApi = params.api;\r\n            const thisRow: Record<string, GridCellValue> = {};\r\n    \r\n            api\r\n              .getAllColumns()\r\n              .filter((c) => c.field !== \"__check__\" && !!c)\r\n              .forEach(\r\n                (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\r\n              );\r\n    \r\n            return alert(JSON.stringify(thisRow, null, 4));\r\n          };\r\n    \r\n          return <Button onClick={onClick}>Click</Button>;\r\n        }\r\n      },\r\n]\r\n\r\n// let newReq = new Request(\"../data.json\")\r\n\r\nfunction TableMUI() {\r\n\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        // fetch(\"newReq\")\r\n        .then(response => response.json())\r\n        .then(data => {data.map(ele => {return ele.action = \"Details\"})\r\n                setTableData(data)\r\n        })\r\n        .catch(error => console.log(\"Error =>\", error)); \r\n        \r\n    }, [])\r\n\r\n    // console.log(\"tableData: \", tableData)\r\n\r\n    return(\r\n\r\n        <div style={{height: 650, width: '90%', textAlign: \"center\"}}>\r\n\r\n            <DataGrid \r\n                rows={tableData}\r\n                columns={columns}\r\n                // pageSize={10}\r\n                initialState={{\r\n                    sorting: {\r\n                        sortModel: [{ field: '', sort: 'asc' }],\r\n                    },\r\n                    filter: {\r\n                        filterModel: {\r\n                            items: [{ columnField: '', operatorValue: '>', value: '' }],\r\n                        },\r\n                    },\r\n                }}\r\n                // checkboxSelection\r\n            />\r\n\r\n            {/* <Details /> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableMUI;"]},"metadata":{},"sourceType":"module"}