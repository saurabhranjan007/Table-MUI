{"ast":null,"code":"import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport var gridSelectionStateSelector = function gridSelectionStateSelector(state) {\n  return state.selection;\n};\nexport var selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, function (selection) {\n  return selection.length;\n});\nexport var selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, function (selectedRows, rowsLookup) {\n  return new Map(selectedRows.map(function (id) {\n    return [id, rowsLookup[id]];\n  }));\n});\nexport var selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, function (selection) {\n  return selection.reduce(function (lookup, rowId) {\n    lookup[rowId] = rowId;\n    return lookup;\n  }, {});\n});","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js"],"names":["createSelector","gridRowsLookupSelector","gridSelectionStateSelector","state","selection","selectedGridRowsCountSelector","length","selectedGridRowsSelector","selectedRows","rowsLookup","Map","map","id","selectedIdsLookupSelector","reduce","lookup","rowId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,SAAV;AAAA,CAAxC;AACP,OAAO,IAAMC,6BAA6B,GAAGL,cAAc,CAACE,0BAAD,EAA6B,UAAAE,SAAS;AAAA,SAAIA,SAAS,CAACE,MAAd;AAAA,CAAtC,CAApD;AACP,OAAO,IAAMC,wBAAwB,GAAGP,cAAc,CAACE,0BAAD,EAA6BD,sBAA7B,EAAqD,UAACO,YAAD,EAAeC,UAAf;AAAA,SAA8B,IAAIC,GAAJ,CAAQF,YAAY,CAACG,GAAb,CAAiB,UAAAC,EAAE;AAAA,WAAI,CAACA,EAAD,EAAKH,UAAU,CAACG,EAAD,CAAf,CAAJ;AAAA,GAAnB,CAAR,CAA9B;AAAA,CAArD,CAA/C;AACP,OAAO,IAAMC,yBAAyB,GAAGb,cAAc,CAACE,0BAAD,EAA6B,UAAAE,SAAS;AAAA,SAAIA,SAAS,CAACU,MAAV,CAAiB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACnID,IAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBA,KAAhB;AACA,WAAOD,MAAP;AACD,GAHgG,EAG9F,EAH8F,CAAJ;AAAA,CAAtC,CAAhD","sourcesContent":["import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));"]},"metadata":{},"sourceType":"module"}