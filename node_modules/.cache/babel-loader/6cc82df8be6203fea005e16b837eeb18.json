{"ast":null,"code":"import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboard } from '../hooks/features/keyboard/useGridKeyboard';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboard/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editRows/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nexport var useDataGridComponent = function useDataGridComponent(props) {\n  var apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridPreferencesPanel(apiRef);\n  useGridFilter(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridKeyboard(apiRef);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js"],"names":["useGridInitialization","useGridInitializeState","useGridClipboard","columnMenuStateInitializer","useGridColumnMenu","useGridColumns","columnsStateInitializer","densityStateInitializer","useGridDensity","useGridCsvExport","useGridPrintExport","useGridFilter","filterStateInitializer","focusStateInitializer","useGridFocus","useGridKeyboard","useGridKeyboardNavigation","useGridPagination","paginationStateInitializer","useGridPreferencesPanel","preferencePanelStateInitializer","useGridEditing","editingStateInitializer","useGridRows","rowsStateInitializer","useGridParamsApi","selectionStateInitializer","useGridSelection","useGridSelectionPreProcessors","useGridSorting","sortingStateInitializer","useGridScroll","useGridEvents","useGridDimensions","rowsMetaStateInitializer","useGridRowsMeta","useGridStatePersistence","useDataGridComponent","props","apiRef","undefined"],"mappings":"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","sourcesContent":["import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboard } from '../hooks/features/keyboard/useGridKeyboard';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboard/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editRows/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nexport const useDataGridComponent = props => {\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridPreferencesPanel(apiRef);\n  useGridFilter(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridKeyboard(apiRef);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};"]},"metadata":{},"sourceType":"module"}