{"ast":null,"code":"var _jsxFileName = \"C:\\\\pproject-files\\\\new-app\\\\src\\\\new-components\\\\TableMUI.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\nimport { GridColDef, GridApi, GridCellValue } from '@mui/x-data-grid';\nimport DataModal from \"./DataModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onClick = x => {\n  x.stopPropagation(); // don't select this row after clicking\n\n  const api = params.api;\n  const thisRow = {};\n  api.getAllColumns().filter(c => c.field !== '__check__' && !!c).forEach(c => thisRow[c.field] = params.getValue(params.id, c.field));\n  return alert(JSON.stringify(thisRow, null, 4));\n}; // defining the column section of the table \n\n\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\"\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 200\n}, {\n  field: \"username\",\n  headerName: \"User Name\",\n  width: 200\n}, {\n  field: \"email\",\n  headerName: \"Email\",\n  width: 300\n}, {\n  field: \"phone\",\n  headerName: \"Phone\",\n  width: 250\n}, {\n  field: \"website\",\n  headerName: \"Website\",\n  width: 200\n}, {\n  field: 'action',\n  headerName: 'Action',\n  sortable: false,\n  renderCell: params => {\n    //   const onClick = (x) => {\n    //     x.stopPropagation(); // don't select this row after clicking\n    //     const api: GridApi = params.api;\n    //     const thisRow: Record <string, GridCellValue> = {};\n    //     api\n    //       .getAllColumns()\n    //       .filter((c) => c.field !== '__check__' && !!c)\n    //       .forEach((c) => (thisRow[c.field] = params.getValue(params.id, c.field)));\n    //       return alert(JSON.stringify(thisRow, null, 4));\n    //       };\n    return /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: onClick,\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this);\n  }\n}];\n\nfunction TableMUI() {\n  _s();\n\n  // fetching data from the API and setting it to tableData to be shown in the row section of the table\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => setTableData(data)).catch(error => console.log(\"Error =>\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 650,\n      width: '90%',\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns // pageSize={10}\n      ,\n      initialState: {\n        sorting: {\n          sortModel: [{\n            field: '',\n            sort: 'asc'\n          }]\n        },\n        filter: {\n          filterModel: {\n            items: [{\n              columnField: '',\n              operatorValue: '>',\n              value: ''\n            }]\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableMUI, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n\n_c = TableMUI;\nexport default TableMUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableMUI\");","map":{"version":3,"sources":["C:/pproject-files/new-app/src/new-components/TableMUI.jsx"],"names":["React","useState","useEffect","DataGrid","Button","GridColDef","GridApi","GridCellValue","DataModal","onClick","x","stopPropagation","api","params","thisRow","getAllColumns","filter","c","field","forEach","getValue","id","alert","JSON","stringify","columns","headerName","width","sortable","renderCell","TableMUI","tableData","setTableData","fetch","then","response","json","data","catch","error","console","log","height","textAlign","sorting","sortModel","sort","filterModel","items","columnField","operatorValue","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\nimport { GridColDef, GridApi, GridCellValue } from '@mui/x-data-grid';\r\nimport DataModal from \"./DataModal\"\r\n\r\nconst onClick = (x) => {\r\n    x.stopPropagation(); // don't select this row after clicking\r\n\r\n    const api: GridApi = params.api;\r\n    const thisRow: Record <string, GridCellValue> = {};\r\n\r\n    api\r\n      .getAllColumns()\r\n      .filter((c) => c.field !== '__check__' && !!c)\r\n      .forEach((c) => (thisRow[c.field] = params.getValue(params.id, c.field)));\r\n        \r\n      return alert(JSON.stringify(thisRow, null, 4));\r\n      };\r\n\r\n\r\n// defining the column section of the table \r\nconst columns = [\r\n    {field: \"id\", headerName: \"ID\"},\r\n    {field: \"name\", headerName: \"Name\", width: 200},\r\n    {field: \"username\", headerName: \"User Name\", width: 200},\r\n    {field: \"email\", headerName: \"Email\", width: 300},\r\n    {field: \"phone\", headerName: \"Phone\", width: 250},\r\n    {field: \"website\", headerName: \"Website\", width: 200},\r\n\r\n    {\r\n    field: 'action',\r\n    headerName: 'Action',\r\n    sortable: false,\r\n    renderCell: (params) => {\r\n    //   const onClick = (x) => {\r\n    //     x.stopPropagation(); // don't select this row after clicking\r\n\r\n    //     const api: GridApi = params.api;\r\n    //     const thisRow: Record <string, GridCellValue> = {};\r\n\r\n    //     api\r\n    //       .getAllColumns()\r\n    //       .filter((c) => c.field !== '__check__' && !!c)\r\n    //       .forEach((c) => (thisRow[c.field] = params.getValue(params.id, c.field)));\r\n            \r\n    //       return alert(JSON.stringify(thisRow, null, 4));\r\n    //       };\r\n            return <Button variant=\"outlined\" color=\"secondary\" onClick={onClick} >Details</Button>;\r\n            },\r\n        },        \r\n]\r\n\r\n\r\nfunction TableMUI() {\r\n\r\n    // fetching data from the API and setting it to tableData to be shown in the row section of the table\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(data => setTableData(data))\r\n        .catch(error => console.log(\"Error =>\", error)); \r\n    }, [])\r\n\r\n    return(\r\n\r\n        <div style={{height: 650, width: '90%', textAlign: \"center\"}}>\r\n\r\n            <DataGrid \r\n                rows={tableData}\r\n                columns={columns}\r\n                // pageSize={10}\r\n                initialState={{\r\n                    sorting: {\r\n                        sortModel: [{ field: '', sort: 'asc' }],\r\n                    },\r\n                    filter: {\r\n                        filterModel: {\r\n                            items: [{ columnField: '', operatorValue: '>', value: '' }],\r\n                        },\r\n                    },\r\n                }}\r\n            />\r\n\r\n            <DataModal />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableMUI;\r\n"]},"metadata":{},"sourceType":"module"}