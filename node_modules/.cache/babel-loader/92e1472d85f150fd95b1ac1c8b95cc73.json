{"ast":null,"code":"var _jsxFileName = \"C:\\\\pproject-files\\\\new-app\\\\src\\\\new-components\\\\TableMUI.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { DataGrid } from '@mui/x-data-grid'; // import { DataGrid } from '@mui/data-grid';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\"\n}, {\n  field: \"name\",\n  headerName: \"Name\"\n}, {\n  field: \"username\",\n  headerName: \"User Name\"\n}, {\n  field: \"email\",\n  headerName: \"Email\"\n} // {field: \"phone\", headerName: \"Phone\"},\n// {field: \"website\", headerName: \"Website\"},\n// {field: \"address.city\", headerName: \"City\"},\n// {field: \"company.name\", headerName: \"Company\"},\n// {field: \"details\", headerName: \"Action\"}\n];\n\nfunction TableMUI() {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => setTableData(data)).catch(error => console.log(\"Error =>\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableMUI, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n\n_c = TableMUI;\nexport default TableMUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableMUI\");","map":{"version":3,"sources":["C:/pproject-files/new-app/src/new-components/TableMUI.jsx"],"names":["React","useState","useEffect","DataGrid","columns","field","headerName","TableMUI","tableData","setTableData","fetch","then","response","json","data","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CACA;;;AAGA,MAAMC,OAAO,GAAG,CACZ;AAACC,EAAAA,KAAK,EAAE,IAAR;AAAcC,EAAAA,UAAU,EAAE;AAA1B,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CAFY,EAGZ;AAACD,EAAAA,KAAK,EAAE,UAAR;AAAoBC,EAAAA,UAAU,EAAE;AAAhC,CAHY,EAIZ;AAACD,EAAAA,KAAK,EAAE,OAAR;AAAiBC,EAAAA,UAAU,EAAE;AAA7B,CAJY,CAKZ;AACA;AACA;AACA;AACA;AATY,CAAhB;;AAYA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIL,YAAY,CAACK,IAAD,CAF1B,EAGCC,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB,CAHhB;AAKH,GAPQ,EAON,EAPM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,QAAD;AACI,MAAA,IAAI,EAAER,SADV;AAEI,MAAA,OAAO,EAAEJ,OAFb;AAGI,MAAA,QAAQ,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAvCQG,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n// import { DataGrid } from '@mui/data-grid';\r\n\r\n\r\nconst columns = [\r\n    {field: \"id\", headerName: \"ID\"},\r\n    {field: \"name\", headerName: \"Name\"},\r\n    {field: \"username\", headerName: \"User Name\"},\r\n    {field: \"email\", headerName: \"Email\"},\r\n    // {field: \"phone\", headerName: \"Phone\"},\r\n    // {field: \"website\", headerName: \"Website\"},\r\n    // {field: \"address.city\", headerName: \"City\"},\r\n    // {field: \"company.name\", headerName: \"Company\"},\r\n    // {field: \"details\", headerName: \"Action\"}\r\n]\r\n\r\nfunction TableMUI() {\r\n\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    useEffect(() => {\r\n        \r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => response.json())\r\n        .then(data => setTableData(data))\r\n        .catch(error => console.log(\"Error =>\", error)); \r\n\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h2>Data Table</h2>\r\n\r\n            <DataGrid \r\n                rows={tableData}\r\n                columns={columns}\r\n                pageSize={10}\r\n            />\r\n\r\n\r\n            {/* <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                components={{\r\n                    ColumnMenu: MyCustomColumnMenu,\r\n                }}\r\n                componentsProps={{\r\n                    columnMenu: { background: 'red', counter: rows.length },\r\n                }}\r\n            /> */}\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableMUI;"]},"metadata":{},"sourceType":"module"}