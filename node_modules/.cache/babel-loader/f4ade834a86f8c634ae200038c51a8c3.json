{"ast":null,"code":"import _slicedToArray from \"C:/pproject-files/new-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, useForkRef } from '@mui/material/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$components;\n\n  var children = props.children,\n      onClick = props.onClick,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var apiRef = useGridApiContext();\n  var rootProps = useGridRootProps();\n  var buttonId = useId();\n  var menuId = useId();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var buttonRef = React.useRef(null);\n  var handleRef = useForkRef(ref, buttonRef);\n\n  var handleMenuOpen = function handleMenuOpen(event) {\n    setOpen(true);\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  var handleMenuClose = function handleMenuClose() {\n    return setOpen(false);\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n\n  if (children == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: handleRef,\n      color: \"primary\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.components.ExportIcon, {}),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-labelledby\": menuId,\n      id: buttonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": buttonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, function (child) {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","unstable_useId","useId","useForkRef","MenuList","isHideMenuKey","isTabKey","useGridApiContext","GridMenu","useGridRootProps","gridClasses","jsx","_jsx","jsxs","_jsxs","GridToolbarExportContainer","forwardRef","props","ref","_rootProps$components","children","onClick","other","apiRef","rootProps","buttonId","menuId","useState","open","setOpen","buttonRef","useRef","handleRef","handleMenuOpen","event","handleMenuClose","handleListKeyDown","key","preventDefault","Fragment","components","BaseButton","color","size","startIcon","ExportIcon","undefined","current","getLocaleText","id","componentsProps","baseButton","target","onClickAway","position","className","menuList","onKeyDown","autoFocusItem","Children","map","child","isValidElement","cloneElement","hideMenu"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"onClick\"];\nimport * as React from 'react';\nimport { unstable_useId as useId, useForkRef } from '@mui/material/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    children,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const buttonId = useId();\n  const menuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n\n  const handleMenuOpen = event => {\n    setOpen(true);\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleMenuClose = () => setOpen(false);\n\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n\n  if (children == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: handleRef,\n      color: \"primary\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsx(rootProps.components.ExportIcon, {}),\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-labelledby\": menuId,\n      id: buttonId\n    }, other, {\n      onClick: handleMenuOpen\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarExport')\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClickAway: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": buttonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});"]},"metadata":{},"sourceType":"module"}