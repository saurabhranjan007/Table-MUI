{"ast":null,"code":"import * as React from 'react';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\n\nvar isSyntheticEvent = function isSyntheticEvent(event) {\n  return event.isPropagationStopped !== undefined;\n};\n\nvar globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  var apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, function () {\n    return apiRef.current;\n  }, [apiRef]);\n  var publishEvent = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var name = args[0],\n        params = args[1],\n        _args$ = args[2],\n        event = _args$ === void 0 ? {} : _args$;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    var details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  var subscribeEvent = React.useCallback(function (event, handler, options) {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    var api = apiRef.current;\n    return function () {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  var showError = React.useCallback(function (args) {\n    apiRef.current.publishEvent(GridEvents.componentError, args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent: subscribeEvent,\n    publishEvent: publishEvent,\n    showError: showError\n  }, 'GridCoreApi');\n  React.useEffect(function () {\n    var api = apiRef.current;\n    return function () {\n      api.publishEvent(GridEvents.unmount);\n    };\n  }, [apiRef]);\n  return apiRef;\n}","map":{"version":3,"sources":["C:/pproject-files/new-app/node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js"],"names":["React","GridEvents","useGridApiMethod","GridSignature","EventManager","isSyntheticEvent","event","isPropagationStopped","undefined","globalId","useGridApiInitialization","inputApiRef","props","apiRef","useRef","current","unstable_eventManager","state","instanceId","useImperativeHandle","publishEvent","useCallback","args","name","params","defaultMuiPrevented","details","signature","DataGridPro","api","emit","subscribeEvent","handler","options","on","removeListener","showError","componentError","useEffect","unmount"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent(GridEvents.componentError, args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      api.publishEvent(GridEvents.unmount);\n    };\n  }, [apiRef]);\n  return apiRef;\n}"]},"metadata":{},"sourceType":"module"}